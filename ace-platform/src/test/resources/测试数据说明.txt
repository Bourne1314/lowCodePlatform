** 开始测试前需要将application-dev.yml里面的ace.config.test-open-flg值设为true
(为了模拟登录，将生成的token值放入SecurUtils里面)

test_add_data.sql数据分析：

集团：
       单体测试顶级集团1
          单体测试一级集团1
             单体测试二级集团1
                单体测试三级集团1
          单体测试一级集团2

业务单元（单体测试顶级集团1下）：
         单体测试顶级业务单元1
            单体测试一级业务单元1
               单体测试二级业务单元1
                  单体测试三级业务单元1
            单体测试一级业务单元2

部门（单体测试顶级集团1,单体测试顶级业务单元1下）：
            单体测试顶级部门1
               单体测试一级部门1
                  单体测试二级部门1
                      单体测试三级部门1
               单体测试一级部门2

个人档案（单体测试顶级集团1,单体测试顶级业务单元1,单体测试顶级部门1下）：单体测试档案1,2,3,4,5,6

岗位（单体测试顶级集团1,单体测试顶级业务单元1,单体测试顶级部门1下）：单体测试岗位1

职务（单体测试顶级集团1下）：单体测试职务1

用户（单体测试顶级集团1,单体测试顶级业务单元1下）:单体测试用户1,2,3,4,5

应用（单体测试顶级集团1下）：单体测试应用111,单体测试应用111

用户组（单体测试顶级集团1,单体测试顶级业务单元1下）：
            测试顶级用户组1
               测试一级用户组1
                  测试二级用户组1
                      测试三级用户组1
               测试一级用户组2

菜单（单体测试应用111下）：首页

权限（单体测试应用111下）：首页、单体测试权限1,2,3,4,5、单体测试权限3下级-权限1、单体测试权限3下级-权限1下级-权限1

角色（单体测试应用111下）:单体测试角色1,2,3,4,5、单体测试下级角色1,2、单体测试互斥角色1.2

角色关系：单体测试角色1（下级）-->单体测试下级角色1,2
        单体测试角色1（互斥）-->单体测试互斥角色1,2

API:单体测试Api1,2,3

权限API:单体测试权限3-->单体测试Api1,2,3

集团管理员：测试集团管理员、测试集团保密员、测试集团审计员、
集团授控域：单体测试顶级集团1、单体测试一级集团1

应用管理员：测试应用管理员、测试应用保密员、测试应用审计员
应用授控域：单体测试应用111、
组织授控域：单体测试顶级业务单元1、单体测试一级业务单元1
应用管理员授权： 单体测试角色1-->首页,单体测试权限1,2
              单体测试角色2-->单体测试权限4,5
              单体测试用户1-->单体测试角色1,2
              单体测试用户2-->单体测试权限1,2,首页(应用2）

用户有效权限:   单体测试用户2-->单体测试权限1,2,首页(应用2）
              单体测试用户1-->首页、单体测试权限1,2,4,5,
